{"version":3,"sources":["components/form.js","components/todo.js","components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","class","App","useState","status","setFilterTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21fe82b5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ setInputText, todos, setTodos, inputText ,setStatus}) => {\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random() * 1000 },\n    ]);\n    setInputText(\"\");\n  };\n\n  const statusHandler = (e) => {\n     setStatus(e.target.value);\n  };\n\n  return (\n    <form>\n      <input\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        type=\"text\"\n        className=\"todo-input\"\n      />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nfunction Todo({text,setTodos,todos,todo}) {\n  const deleteHandler=()=>{\n    setTodos(todos.filter((el)=>el.id !== todo.id));\n  };\n  const completeHandler=()=>{\n    setTodos(todos.map((item)=>{\n      if(item.id===todo.id){\n        return{\n          ...item,completed:!item.completed\n        }\n      }\n      return item;\n    }));\n\n  };\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ?\"completed\": \"\"} `}>{text}</li>\n      <button onClick={completeHandler}className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./todo\";\n\nconst TodoList = ({ todos, setTodos,filteredTodos }) => {\n  return (\n    <div class=\"todo-container\">\n      <ul class=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            key={todo.id}\n            text={todo.text}\n            todos={todos}\n            todo={todo}\n            setTodos={setTodos}\n            \n            \n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/form.js\";\nimport TodoList from \"./components/todoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilterTodos] = useState([]);\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilterTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"umcompleted\":\n        setFilterTodos(todos.filter((todo) => todo.completed !== true));\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>Your TO-DO List</header>\n      <Form\n        todos={todos}\n        inputText={inputText}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n       \n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}